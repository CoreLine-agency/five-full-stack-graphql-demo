/*** AUTOGENERATED FILE: you can only modify parts of the file within <keep-*> tags ***/
// tslint:disable max-line-length
import { asPromise } from '../../../utils/as-promise';
import { PostNestedInput } from '../../inputs/PostNestedInput';
import { IRequestContext } from '../../IRequestContext';
import { Post } from '../Post';
import { Vote } from '../Vote';

export async function updatePostRelation(vote: Vote, post: PostNestedInput | null | undefined, context: IRequestContext) {
  const existingPost = await vote.post;

  if (post === null) {
    throw new Error('Vote.post cannot be null');
  } else if (post === undefined) {
    // do nothing
  } else if (post.id) {
    const postModel = await context.em.findOneOrFail(Post, post.id);
    vote.post = asPromise(await postModel.update(post, context));
  } else if (existingPost) {
    await existingPost.update(post, context);
  } else {
    vote.post = asPromise(await new Post().update(post, context));
  }
}
